use sakila;
-- QUESTION 1:Retrieve the total number of rentals made in sakila database.
SELECT COUNT(*) AS TOTAL_NUMBER_OF_RENTALS FROM RENTAL;

-- QUESTION 2:Find the average rental duration (in days) of movies rented from the sakila database.
SELECT AVG(DATEDIFF(RETURN_DATE , RENTAL_DATE)) AS RENTAL_DURATION FROM RENTAL; 

-- QUESTION 3:display the first name and last name of customers in upper case.
SELECT UPPER(FIRST_NAME) , UPPER(LAST_NAME)  FROM CUSTOMER;

-- QUESTION 4:Extract the month from rental date and display it alongside rental ID.
SELECT MONTH(RENTAL_DATE) , RENTAL_ID FROM RENTAL;

-- QUESTION 5:Retrieve the count of rentals for each customer(display customer ID and the count 
-- of rentals).
SELECT CUSTOMER_ID , COUNT(RENTAL_ID) AS COUNT_OF_RENTALS FROM RENTAL GROUP BY CUSTOMER_ID;

-- QUESTION 6:Find the total revenue generated by each store.
SELECT 
    S.STORE_ID, SUM(P.AMOUNT) AS TOTAL_REVENUE
FROM
    STORE S
        INNER JOIN
    STAFF ST ON S.STORE_ID = ST.STORE_ID
        INNER JOIN
    PAYMENT P ON P.STAFF_ID = ST.STAFF_ID
GROUP BY S.STORE_ID; 

-- QUESTION 7:Display the title of the movies, customer's first name, and last name 
-- who rented it.
SELECT 
    F.TITLE, CONCAT(FIRST_NAME, LAST_NAME) AS NAME
FROM
    FILM F
        JOIN
    INVENTORY I ON F.FILM_ID = I.FILM_ID
        JOIN
    RENTAL R ON R.RENTAL_ID = I.INVENTORY_ID
        JOIN
    CUSTOMER C ON C.CUSTOMER_ID = R.CUSTOMER_ID;
    
-- QUESTION 8:Retrieve the names of all actors who have appeared in the film "Gone with the wind"
SELECT A.FIRST_NAME , A.LAST_NAME FROM FILM_ACTOR FA JOIN FILM F ON FA.FILM_ID = F.FILM_ID JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID WHERE F.TITLE = "GONE WITH THE WIND"; 

-- GROUP BY.
-- QUESTION 1:Determine the total number of rentals for each category of movies. 
SELECT 
    FC.CATEGORY_ID, COUNT(RENTAL_ID)
FROM
    RENTAL R
        JOIN
    INVENTORY I ON I.INVENTORY_ID = R.INVENTORY_ID
        JOIN
    FILM_CATEGORY FC ON FC.FILM_ID = I.FILM_ID
        JOIN
    FILM F ON F.FILM_ID = FC.FILM_ID
GROUP BY FC.CATEGORY_ID;

-- QUESTION 2:Find the average rental rate of movies in each language.
select avg(rental_rate) from film join language on language.language_id = film.language_id;

-- QUESTION 3:Retrieve the customer names along with the total amount they have spent on rentals.
select c.first_name , c.last_name , sum(p.amount) from customer c join payment p on c.customer_id=p.customer_id join rental r on c.customer_id = r.customer_id group by c.customer_id;

-- QUESTION 4:List the titles of the movie rented by each customer in a particular city(eg:'london') 
select c.first_name , c.last_name , f.title from customer c join address a on c.address_id=a.address_id join city ci on a.city_id=ci.city_id join rental r on c.customer_id=r.customer_id join inventory i on r.inventory_id=r.inventory_id join film f on i.film_id=f.film_id where ci.city='london' group by c.first_name , c.last_name , f.title order by c.first_name , c.last_name , f.title;

-- QUESTION 5:Display the top 5 rented movies along with the number of times they have been rented.
select f.title , count(*) as rental_count from film f join inventory i on f.film_id=i.film_id join rental r on i.inventory_id=r.inventory_id GROUP BY TITLE order by rental_count DESC limit 5;

-- QUESTION 6:determine the customers who have rented movies from both stores (store ID 1 and store ID 2) 
select c.customer_id , c.first_name , c.last_name , count(c.customer_id) from customer c join rental r on c.customer_id=r.customer_id join inventory i on r.inventory_id=i.inventory_id join store s on i.store_id=s.store_id where s.store_id IN (1,2)  group by c.customer_id;

